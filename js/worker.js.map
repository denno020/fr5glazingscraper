{"version":3,"sources":["webpack:///webpack/bootstrap b942ae3e259025729cc2","webpack:///./src/js/CeilingHeight.js","webpack:///./src/js/HorizontalShadingScheme.js","webpack:///./src/js/WindowConstruction.js","webpack:///./src/js/ZoneDetail.js","webpack:///./src/js/ZoneWindow.js","webpack:///./src/js/utils/LooksLike.js","webpack:///./src/js/Parser.js","webpack:///./src/js/ResultsBuilder.js","webpack:///./src/js/Orientation.js","webpack:///./src/js/ScratchFileLine.js","webpack:///./src/js/utils/index.js","webpack:///./src/worker.js"],"names":["CeilingHeight","lineData","zoneId","height","regex","RegExp","Regex","data","exec","trim","getZoneId","getHeight","HorizontalShadingScheme","id","eaveProjection","eaveOffset","pergolaProjection","pergolaOffset","projection","CONST__ID","CONST__EAVE_PROJECTION","CONST__EAVE_OFFSET","CONST__PERGOLA_PROJECTION","CONST__PERGOLA_OFFSET","getProjection","parseFloat","getEaveProjection","getPergolaProjection","getId","offset","eave","getEaveOffset","pergola","getPergolaOffset","WindowConstruction","name","CONST__NAME","ZoneDetail","getName","ZoneWindow","windowId","width","azimuth","headHeight","horizShading1Id","horizShading2Id","CONST__ZONE_ID","CONST__WINDOW_ID","CONST__HEIGHT","CONST__WIDTH","CONST__AZIMUTH","CONST__HORZ_SHADING_1","CONST__HORZ_SHADING_2","getWindowId","getWidth","getAzimuth","getHeadHeight","getHorizShading1Id","getHorizShading2Id","LooksLike","Test","regexp","test","ShadingScheme","Parser","file","windowConstructions","zoneWindows","zoneDetails","shadingSchemes","ceilingHeights","dataLines","getDataLines","filter","ReverseLookup","line","map","Build","window","zoneWindow","shading","ceilingHeight","zoneDetail","ScratchFileLine","getWindowConstructions","getZoneWindows","getShading","getCeilingHeights","getZoneDetails","ResultsBuilder","zone","windows","construction","cons","shadingScheme","shade","ceiling","zones","reference","csv","windowCsv","length","Orientation","Get","azimuthInt","parseInt","Is","CONST__N_E","CONST__E","CONST__S_E","CONST__S","CONST__S_W","CONST__W","CONST__N_W","limits","vector","upper","Normalize","lower","number","Math","abs","CONST__N","flatten","prototype","concat","arr","onmessage","reader","FileReader","onload","e","scratchFile","target","result","split","parser","process","Compile","getAllData","results","postMessage","abort","readAsText"],"mappings":"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","file":"worker.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 11);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap b942ae3e259025729cc2","/**\n * Class CeilingHeight\n */\nclass CeilingHeight {\n\n  static Regex = '^ 3(.{3})700(.{6})(.{6})(.{6})(.{6})';\n\n  zoneId = '';\n  height = '';\n\n  constructor(lineData) {\n    const regex = new RegExp(CeilingHeight.Regex);\n    const data = regex.exec(lineData);\n\n    this.zoneId = data[1].trim();\n    this.height = data[3].trim();\n  }\n\n  getZoneId() {\n    return this.zoneId;\n  }\n\n  getHeight() {\n    return this.height;\n  }\n\n  toObject() {\n    return {\n      zoneId: this.getZoneId(),\n      height: this.getHeight()\n    };\n  }\n\n  static Build(data) {\n    return new CeilingHeight(data);\n  }\n\n}\n\nexport default CeilingHeight;\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/CeilingHeight.js","/**\n * Break the Horizontal Shading Scheme data into its various parts\n */\nclass HorizontalShadingScheme {\n\n  /**\n   * Constants that map the various bits of data to the section of regex\n   */\n  static CONST__ID = 1;\n  static CONST__EAVE_PROJECTION = 2;\n  static CONST__EAVE_OFFSET = 3;\n  static CONST__PERGOLA_PROJECTION = 6;\n  static CONST__PERGOLA_OFFSET = 7;\n\n  static Regex = '^ 1 20(.{3})(.{6})(.{6})(.{6})(.{6})(.{6})(.{6})(.{6})(.{6})(.{6})(.{6})(.{6})(.{6})(.{6})(.{6})(.{6})(.{6})(.{6})(.{6})(.{6})(.{6})$';\n\n  id = '';\n  eaveProjection = '';\n  eaveOffset = '';\n  pergolaProjection = '';\n  pergolaOffset = '';\n  projection = '';\n\n  constructor(lineData) {\n    const regex = new RegExp(HorizontalShadingScheme.Regex);\n    const data = regex.exec(lineData);\n\n    this.id = data[HorizontalShadingScheme.CONST__ID].trim();\n    this.eaveProjection = data[HorizontalShadingScheme.CONST__EAVE_PROJECTION].trim();\n    this.eaveOffset = data[HorizontalShadingScheme.CONST__EAVE_OFFSET].trim();\n    this.pergolaProjection = data[HorizontalShadingScheme.CONST__PERGOLA_PROJECTION].trim();\n    this.pergolaOffset = data[HorizontalShadingScheme.CONST__PERGOLA_OFFSET].trim();\n    this.projection = this.getProjection();\n  }\n\n  /**\n   * Determine the highest projection value and return\n   *\n   * @returns {string}\n   */\n  getProjection() {\n    return parseFloat(this.getEaveProjection()) > parseFloat(this.getPergolaProjection()) ?\n      this.getEaveProjection() :\n      this.getPergolaProjection();\n  }\n\n  getId() {\n    return this.id;\n  }\n\n  getEaveOffset() {\n    return this.eaveOffset;\n  }\n\n  getEaveProjection() {\n    return this.eaveProjection;\n  }\n\n  getPergolaOffset() {\n    return this.pergolaOffset;\n  }\n\n  getPergolaProjection() {\n    return this.pergolaProjection;\n  }\n\n  toObject() {\n    return {\n      id: this.getId(),\n      projection: this.getProjection(),\n      offset: {\n        eave: this.getEaveOffset(),\n        pergola: this.getPergolaOffset()\n      }\n    };\n  }\n\n  static Build(data) {\n    return new HorizontalShadingScheme(data);\n  }\n\n}\n\nexport default HorizontalShadingScheme;\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/HorizontalShadingScheme.js","/**\n * Break a Window construction data line into its various parts\n */\nclass WindowConstruction {\n\n  static CONST__ID = 3;\n  static CONST__NAME = '';\n\n  static Regex = '^ \\\\d(.{3})[ \\\\d]*([a-zA-Z][a-zA-Z\\\\-\\\\d]{9}[ a-zA-Z][a-zA-Z]?)';\n\n  id = '';\n  name = '';\n\n  constructor(lineData) {\n    const regex = new RegExp(WindowConstruction.Regex);\n    const data = regex.exec(lineData);\n\n    this.id = data[1].trim();\n    this.name = data[2].trim();\n  }\n\n  toObject() {\n    return {\n      id: this.id,\n      name: this.name\n    };\n  }\n\n  static Build(data) {\n    return new WindowConstruction(data);\n  }\n\n}\n\nexport default WindowConstruction;\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/WindowConstruction.js","/**\n * Class ZoneDetail\n */\nclass ZoneDetail {\n\n  static Regex = '^C Z00?(\\\\d{1,3}) => (.*)$';\n\n  id = '';\n  name = '';\n\n  constructor(lineData) {\n    const regex = new RegExp(ZoneDetail.Regex);\n    const data = regex.exec(lineData);\n\n    this.id = data[1].trim();\n    this.name = data[2].trim();\n  }\n\n  getId() {\n    return this.id;\n  }\n\n  getName() {\n    return this.name;\n  }\n\n  toObject() {\n    return {\n      id: this.getId(),\n      name: this.getName()\n    };\n  }\n\n  static Build(data) {\n    return new ZoneDetail(data);\n  }\n\n}\n\nexport default ZoneDetail;\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/ZoneDetail.js","/**\n * Class to parse window information inside a zone section\n */\nclass ZoneWindow {\n\n  static CONST__ZONE_ID = 1;\n  static CONST__WINDOW_ID = 2;\n  static CONST__HEIGHT = 6;\n  static CONST__WIDTH = 7;\n  static CONST__AZIMUTH = 8;\n  static CONST__HORZ_SHADING_1 = 9;\n  static CONST__HORZ_SHADING_2 = 10;\n\n  static Regex = '^ 3(.{3})(( (10)|(  [0-9])))(.{6})(.{6})(.{6})(.{6})(.{6})(.{6})(.{6})(.{6})(.{6})(.{6})(.{6})';\n\n  zoneId = '';\n  windowId = '';\n  height = '';\n  width = '';\n  azimuth = '';\n  headHeight = ''; // This value isn't used, just here to it can hold an empty cell in the output CSV\n  horizShading1Id = '';\n  horizShading2Id = '';\n\n  constructor(lineData) {\n    const regex = new RegExp(ZoneWindow.Regex);\n    const data = regex.exec(lineData);\n\n    this.zoneId = data[ZoneWindow.CONST__ZONE_ID].trim();\n    this.windowId = data[ZoneWindow.CONST__WINDOW_ID].trim();\n    this.height = data[ZoneWindow.CONST__HEIGHT].trim();\n    this.width = data[ZoneWindow.CONST__WIDTH].trim();\n    this.azimuth = data[ZoneWindow.CONST__AZIMUTH].trim();\n    this.horizShading1Id = data[ZoneWindow.CONST__HORZ_SHADING_1].trim();\n    this.horizShading2Id = data[ZoneWindow.CONST__HORZ_SHADING_2].trim();\n  }\n\n  getZoneId() {\n    return this.zoneId;\n  }\n\n  getWindowId() {\n    return this.windowId;\n  }\n\n  getHeight() {\n    return this.height;\n  }\n\n  getWidth() {\n    return this.width;\n  }\n\n  getAzimuth() {\n    return this.azimuth;\n  }\n\n  getHeadHeight() {\n    return this.headHeight;\n  }\n\n  getHorizShading1Id() {\n    return this.horizShading1Id;\n  }\n\n  getHorizShading2Id() {\n    return this.horizShading2Id;\n  }\n\n  toObject() {\n    return {\n      zoneId: this.getZoneId(),\n      windowId: this.getWindowId(),\n      height: this.getHeight(),\n      width: this.getWidth(),\n      azimuth: this.getAzimuth(),\n      headHeight: this.getHeadHeight(),\n      horizShading1Id: this.getHorizShading1Id(),\n      horizShading2Id: this.getHorizShading2Id()\n    };\n  }\n\n  static Build(data) {\n    return new ZoneWindow(data);\n  }\n\n}\n\nexport default ZoneWindow;\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/ZoneWindow.js","import HorizontalShadingScheme from '../HorizontalShadingScheme';\nimport WindowConstruction from '../WindowConstruction';\nimport ZoneWindow from '../ZoneWindow';\nimport CeilingHeight from '../CeilingHeight';\nimport ZoneDetail from '../ZoneDetail';\n\n/**\n * A class to compare a data string and indicate what type of data it looks like\n */\nclass LooksLike {\n\n  /**\n   * Test if the data line looks like a horizontal shading scheme\n   *\n   * @param {string} lineData The data line to test\n   *\n   * @returns {boolean}\n   */\n  static ShadingScheme(lineData) {\n    return LooksLike.Test(lineData, HorizontalShadingScheme.Regex);\n  }\n\n  /**\n   * Test if the data line looks like a window construction\n   *\n   * @param {string} lineData The data line to test\n   *\n   * @returns {boolean}\n   */\n  static WindowConstruction(lineData) {\n    return LooksLike.Test(lineData, WindowConstruction.Regex);\n  }\n\n  /**\n   * Test if the data line looks like a zone window\n   *\n   * @param {string} lineData The data line to test\n   *\n   * @returns {boolean}\n   */\n  static ZoneWindow(lineData) {\n    return LooksLike.Test(lineData, ZoneWindow.Regex);\n  }\n\n  /**\n   * Test if the data line looks like a ceiling height line\n   *\n   * @param {string} lineData The data line to test\n   *\n   * @returns {boolean}\n   */\n  static CeilingHeight(lineData) {\n    return LooksLike.Test(lineData, CeilingHeight.Regex);\n  }\n\n  /**\n   * Test if the data line looks like a zone detail line\n   *\n   * @param {string} lineData The data line to test\n   *\n   * @returns {boolean}\n   */\n  static ZoneDetail(lineData) {\n    return LooksLike.Test(lineData, ZoneDetail.Regex);\n  }\n\n  /**\n   * Run the regex test against the data\n   *\n   * @param {string} data  The data to test\n   * @param {string} regex The regex pattern to test with\n   *\n   * @returns {boolean}\n   */\n  static Test(data, regex) {\n    const regexp = new RegExp(regex);\n    return regexp.test(data);\n  }\n\n  /**\n   * Determine what the data line looks like\n   *\n   * @param {string} data The data line to test\n   *\n   * @returns {string|boolean}\n   */\n  static ReverseLookup(data) {\n    if (LooksLike.ShadingScheme(data)) {\n      return 'HorizontalShadingScheme';\n    }\n\n    if (LooksLike.CeilingHeight(data)) {\n      return 'CeilingHeight';\n    }\n\n    if (LooksLike.WindowConstruction(data)) {\n      return 'WindowConstruction';\n    }\n\n    if (LooksLike.ZoneWindow(data)) {\n      return 'ZoneWindow';\n    }\n\n    if (LooksLike.ZoneDetail(data)) {\n      return 'ZoneDetail';\n    }\n\n    return false;\n  }\n\n}\n\nexport default LooksLike;\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/utils/LooksLike.js","/**\n * A class to handle parsing an entire scratch file\n */\nimport ScratchFileLine from './ScratchFileLine';\nimport LooksLike from './utils/LooksLike';\nimport WindowConstruction from './WindowConstruction';\nimport ZoneWindow from './ZoneWindow';\nimport HorizontalShadingScheme from './HorizontalShadingScheme';\nimport CeilingHeight from './CeilingHeight';\nimport ZoneDetail from './ZoneDetail';\n\nclass Parser {\n\n  windowConstructions = [];\n  zoneWindows = [];\n  zoneDetails = [];\n  shadingSchemes = [];\n  ceilingHeights = [];\n\n  /**\n   * Constructor\n   *\n   * @param {array} file A scratchfile array\n   */\n  constructor(file) {\n    this.file = file;\n  }\n\n  process() {\n    const dataLines = this.getDataLines();\n\n    // Filter the arrays to only include the related data, then build the data line into the appropriate class\n    this.windowConstructions = dataLines\n      .filter(line => LooksLike.ReverseLookup(line) === 'WindowConstruction')\n      .map(window => WindowConstruction.Build(window));\n\n    this.zoneWindows = dataLines\n      .filter(line => LooksLike.ReverseLookup(line) === 'ZoneWindow')\n      .map(zoneWindow => ZoneWindow.Build(zoneWindow));\n\n    this.shadingSchemes = dataLines\n      .filter(line => LooksLike.ReverseLookup(line) === 'HorizontalShadingScheme')\n      .map(shading => HorizontalShadingScheme.Build(shading));\n\n    this.ceilingHeights = dataLines\n      .filter(line => LooksLike.ReverseLookup(line) === 'CeilingHeight')\n      .map(ceilingHeight => CeilingHeight.Build(ceilingHeight));\n\n    this.zoneDetails = dataLines\n      .filter(line => LooksLike.ReverseLookup(line) === 'ZoneDetail')\n      .map(zoneDetail => ZoneDetail.Build(zoneDetail));\n  }\n\n  /**\n   * Get the lines of data that match a type we're interested in\n   *\n   * @returns {array}\n   */\n  getDataLines() {\n    return this.file.filter(line => ScratchFileLine.Build(line) !== false);\n  }\n\n  getWindowConstructions() {\n    return this.windowConstructions;\n  }\n\n  getZoneWindows() {\n    return this.zoneWindows;\n  }\n\n  getShading() {\n    return this.shadingSchemes;\n  }\n\n  getCeilingHeights() {\n    return this.ceilingHeights;\n  }\n\n  getZoneDetails() {\n    return this.zoneDetails;\n  }\n\n  /**\n   * Return all data in an object that can be deconstructed\n   *\n   * @returns {Object}\n   */\n  getAllData() {\n    return {\n      windowConstructions: this.getWindowConstructions(),\n      zoneWindows: this.getZoneWindows(),\n      shading: this.getShading(),\n      ceilingHeights: this.getCeilingHeights(),\n      zoneDetails: this.getZoneDetails()\n    };\n  }\n\n}\n\nexport default Parser;\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/Parser.js","import Orientation from './Orientation';\nimport { flatten } from './utils';\n/**\n * Class ResultsBuilder\n *\n * This class will take various arrays of data lines, build them into their appropriate classes,\n * link them through various ID's, and then create multiple output lines\n */\n\nclass ResultsBuilder {\n\n  /**\n   * Compile the various arrays into a single array\n   *\n   * @param windowConstructions\n   * @param zoneWindows\n   * @param shading\n   * @param ceilingHeights\n   * @param zoneDetails\n   *\n   * @returns {array}\n   *\n   * @constructor\n   */\n  static Compile({\n    windowConstructions, zoneWindows, shading, ceilingHeights, zoneDetails\n  }) {\n    return zoneDetails.map((zone) => {\n      // Filter the zone windows for only windows in this zone, and then map the window construction, shading and ceiling height details\n      const windows = zoneWindows.filter(window => window.zoneId === zone.id).map((zoneWindow) => {\n        const construction = windowConstructions.filter(cons => cons.id === zoneWindow.getWindowId())[0];\n        const shadingScheme = shading.filter(shade => shade.getId() === zoneWindow.getHorizShading1Id() || shade.getId() === zoneWindow.getHorizShading2Id());\n        const ceilingHeight = ceilingHeights.filter(ceiling => ceiling.getZoneId() === zone.getId())[0];\n\n        return {\n          ...zoneWindow,\n          construction,\n          shading: shadingScheme,\n          ceilingHeight\n        };\n      });\n\n      return {\n        id: zone.getId(),\n        name: zone.getName(),\n        windows\n      };\n    });\n  }\n\n  /**\n   * Build the zones array into a flatt array ready for conversion to CSV\n   *\n   * @param {array}  zones     The zones array created in ResultsBuilder.Compile()\n   * @param {string} reference [Optional] Reference North azimuth. Default 0\n   *\n   * @returns {array}\n   */\n  static Build(zones, reference = 0) {\n    const csv = zones.map((zone) => {\n      const windowCsv = zone.windows.map((window) => {\n        let projection = '';\n        let eaveOffset = '';\n        let pergolaOffset = '';\n        if (window.shading.length > 0) {\n          projection = window.shading[0].projection;\n          eaveOffset = window.shading[0].eaveOffset;\n          pergolaOffset = window.shading[0].pergolaOffset;\n        }\n\n        return [\n          zone.name,\n          '',\n          Orientation.Get(window.azimuth, reference),\n          window.height,\n          window.width,\n          projection,\n          window.headHeight,\n          window.construction.name,\n          window.ceilingHeight.height,\n          eaveOffset,\n          pergolaOffset\n        ];\n      });\n\n      // An empty windowCsv needs to be returned inside an array itself, in order to work with the flatten function\n      return windowCsv.length > 0 ? windowCsv : [windowCsv];\n    });\n\n    return flatten(csv);\n  }\n\n}\n\nexport default ResultsBuilder;\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/ResultsBuilder.js","/**\n * Class Orientation\n */\nclass Orientation {\n\n  static CONST__N = { lower: 22, upper: 338 };\n  static CONST__N_E = { lower: 23, upper: 67 };\n  static CONST__E = { lower: 68, upper: 112 };\n  static CONST__S_E = { lower: 113, upper: 187 };\n  static CONST__S = { lower: 188, upper: 202 };\n  static CONST__S_W = { lower: 203, upper: 247 };\n  static CONST__W = { lower: 248, upper: 292 };\n  static CONST__N_W = { lower: 293, upper: 337 };\n\n  /**\n   * Get string representation of azimuth\n   *\n   * @param {string} azimuth   Azimuth value being changed to orientation\n   * @param {string} reference Reference azimuth for North\n   *\n   * @returns {string|boolean}\n   */\n  static Get(azimuth, reference) {\n    const azimuthInt = parseInt(azimuth, 10);\n\n    if (Orientation.Is(azimuthInt, reference, Orientation.CONST__N_E)) {\n      return 'NE';\n    }\n\n    if (Orientation.Is(azimuthInt, reference, Orientation.CONST__E)) {\n      return 'E';\n    }\n\n    if (Orientation.Is(azimuthInt, reference, Orientation.CONST__S_E)) {\n      return 'SE';\n    }\n\n    if (Orientation.Is(azimuthInt, reference, Orientation.CONST__S)) {\n      return 'S';\n    }\n\n    if (Orientation.Is(azimuthInt, reference, Orientation.CONST__S_W)) {\n      return 'SW';\n    }\n\n    if (Orientation.Is(azimuthInt, reference, Orientation.CONST__W)) {\n      return 'W';\n    }\n\n    if (Orientation.Is(azimuthInt, reference, Orientation.CONST__N_W)) {\n      return 'NW';\n    }\n\n    return 'N';\n  }\n\n  static Is(azimuth, reference, limits) {\n    const vector = {\n      upper: Orientation.Normalize(parseInt(reference, 10) + limits.upper),\n      lower: Orientation.Normalize(parseInt(reference, 10) + limits.lower)\n    };\n\n    if (azimuth >= vector.lower && azimuth <= vector.upper) {\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n   * Normalize a value to be within the 0-360 range\n   *\n   * @param {int} number\n   *\n   * @returns {int}\n   */\n  static Normalize(number) {\n    if (number < 0) {\n      return 360 - Math.abs(number);\n    }\n\n    if (number > 360) {\n      return (number - 360);\n    }\n\n    return number;\n  }\n\n}\n\nexport default Orientation;\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/Orientation.js","import CeilingHeight from './CeilingHeight';\nimport HorizontalShadingScheme from './HorizontalShadingScheme';\nimport LooksLike from './utils/LooksLike';\nimport WindowConstruction from './WindowConstruction';\nimport ZoneWindow from './ZoneWindow';\nimport ZoneDetail from './ZoneDetail';\n\n/**\n * Class ScratchFileLine\n */\nclass ScratchFileLine {\n\n  /**\n   * Build a data line into the appropriate class object\n   *\n   * @param {string} data The data to be parsed\n   *\n   * @return {Object|boolean}\n   */\n  static Build(data) {\n    if (LooksLike.ShadingScheme(data)) {\n      return HorizontalShadingScheme.Build(data);\n    }\n\n    if (LooksLike.CeilingHeight(data)) {\n      return CeilingHeight.Build(data);\n    }\n\n    if (LooksLike.WindowConstruction(data)) {\n      return WindowConstruction.Build(data);\n    }\n\n    if (LooksLike.ZoneWindow(data)) {\n      return ZoneWindow.Build(data);\n    }\n\n    if (LooksLike.ZoneDetail(data)) {\n      return ZoneDetail.Build(data);\n    }\n\n    return false;\n  }\n\n}\n\nexport default ScratchFileLine;\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/ScratchFileLine.js","/**\n * Flatten array 1 level\n *\n * @param {array} arr Arrya to flatten\n *\n * @returns {array}\n */\nexport const flatten = arr => Array.prototype.concat(...arr);\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/utils/index.js","import Parser from './js/Parser';\nimport ResultsBuilder from './js/ResultsBuilder';\n\nonmessage = ({ data }) => {\n  const reader = new FileReader();\n  reader.onload = (e) => {\n    const scratchFile = e.target.result.split('\\r\\n');\n    const parser = new Parser(scratchFile);\n    parser.process();\n\n    const zones = ResultsBuilder.Compile(parser.getAllData());\n    const results = ResultsBuilder.Build(zones, data.reference);\n\n    postMessage({ results });\n  };\n\n  reader.abort();\n  reader.readAsText(data.file);\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/worker.js"],"sourceRoot":""}